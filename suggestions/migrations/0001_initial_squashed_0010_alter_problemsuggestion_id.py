# Generated by Django 5.0.7 on 2024-07-28 08:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    replaces = [
        ("suggestions", "0001_initial"),
        ("suggestions", "0002_problemsuggestion_hyperlink"),
        ("suggestions", "0003_remove_problemsuggestion_resolved_and_more"),
        ("suggestions", "0004_alter_problemsuggestion_hyperlink"),
        ("suggestions", "0005_problemsuggestion_updated_at"),
        ("suggestions", "0006_problemsuggestion_feedback"),
        ("suggestions", "0007_rename_feedback_problemsuggestion_staff_comments"),
        ("suggestions", "0008_alter_problemsuggestion_table"),
        ("suggestions", "0009_alter_problemsuggestion_id"),
        ("suggestions", "0010_alter_problemsuggestion_id"),
    ]

    dependencies = [
        ("core", "0001_squashed_0054_userprofile_use_twemoji"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ProblemSuggestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weight",
                    models.PositiveSmallIntegerField(
                        blank=True, choices=[(2, 2), (3, 3), (5, 5), (9, 9)], null=True
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        help_text="Source of the problem, e.g. `Shortlist 2018 A7`.",
                        max_length=60,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="A one-line summary of problem, e.g. `Inequality with cube roots`.",
                        max_length=100,
                    ),
                ),
                (
                    "statement",
                    models.TextField(help_text="Statement of the problem, in LaTeX."),
                ),
                (
                    "solution",
                    models.TextField(help_text="Solution to the problem, in LaTeX."),
                ),
                (
                    "comments",
                    models.TextField(blank=True, help_text="Any extra comments."),
                ),
                (
                    "acknowledge",
                    models.BooleanField(
                        default=True,
                        help_text="Acknowledge me for this contribution. (Uncheck for an anonymous contribution.)",
                    ),
                ),
                (
                    "eligible",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this suggestion is eligible for spades.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "unit",
                    models.ForeignKey(
                        help_text="The unit to suggest the problem for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.unit",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who suggested the problem.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "hyperlink",
                    models.URLField(
                        blank=True,
                        help_text="A hyperlink if appropriate, e.g. AoPS thread. Required if the problem is on AoPS.",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("SUGG_EDIT", "Edits requested"),
                            ("SUGG_NEW", "Pending"),
                            ("SUGG_NOK", "Nice rejection"),
                            ("SUGG_OK", "Accepted"),
                            ("SUGG_REJ", "Rejected"),
                        ],
                        default="SUGG_NEW",
                        help_text="The current status of the suggestion",
                        max_length=10,
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "staff_comments",
                    models.TextField(
                        blank=True, help_text="Comments by Evan on this suggestion"
                    ),
                ),
            ],
            options={
                "db_table": "dashboard_problemsuggestion",
            },
        ),
        migrations.AlterModelTable(
            name="problemsuggestion",
            table=None,
        ),
        migrations.AlterField(
            model_name="problemsuggestion",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
    ]
