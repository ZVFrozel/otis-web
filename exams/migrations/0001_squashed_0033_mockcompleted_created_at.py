# Generated by Django 5.0.7 on 2024-07-28 08:23

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models

import exams.models


class Migration(migrations.Migration):
    replaces = [
        ("exams", "0001_initial"),
        ("exams", "0002_assignment_due_date"),
        ("exams", "0003_auto_20170808_1707"),
        ("exams", "0004_auto_20170810_1223"),
        ("exams", "0005_auto_20170810_1230"),
        ("exams", "0006_auto_20170810_1237"),
        ("exams", "0007_auto_20170818_1651"),
        ("exams", "0008_mockolympiad_start_date"),
        ("exams", "0009_assignment_start_date"),
        ("exams", "0010_auto_20170818_2303"),
        ("exams", "0011_auto_20171006_0926"),
        ("exams", "0012_auto_20180531_1305"),
        ("exams", "0013_auto_20180531_1333"),
        ("exams", "0014_auto_20180531_1423"),
        ("exams", "0015_examsubmission_quiz"),
        ("exams", "0016_rename_examsubmission_examattempt"),
        ("exams", "0017_auto_20210804_2236"),
        ("exams", "0018_rename_submitted_examattempt_submit_time"),
        ("exams", "0019_auto_20210805_1334"),
        ("exams", "0020_auto_20210805_1401"),
        ("exams", "0021_auto_20210805_1404"),
        ("exams", "0022_examattempt_score"),
        ("exams", "0023_remove_practiceexam_pdf_url"),
        ("exams", "0024_auto_20210806_0053"),
        ("exams", "0025_auto_20210806_0117"),
        ("exams", "0026_auto_20210806_0126"),
        ("exams", "0027_auto_20210806_0955"),
        ("exams", "0028_mockcompleted"),
        ("exams", "0029_auto_20211022_1013"),
        ("exams", "0030_alter_mockcompleted_options"),
        ("exams", "0031_alter_examattempt_guess1_alter_examattempt_guess2_and_more"),
        ("exams", "0032_alter_practiceexam_url1_alter_practiceexam_url2_and_more"),
        ("exams", "0033_mockcompleted_created_at"),
    ]

    initial = True

    dependencies = [
        ("core", "0001_squashed_0054_userprofile_use_twemoji"),
        ("roster", "0001_squashed_0102_alter_studentregistration_agreement_form"),
    ]

    operations = [
        migrations.CreateModel(
            name="PracticeExam",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "family",
                    models.CharField(
                        choices=[("Waltz", "Waltz"), ("Foxtrot", "Foxtrot")],
                        help_text="The family that the exam comes from.",
                        max_length=10,
                    ),
                ),
                (
                    "is_test",
                    models.BooleanField(help_text="Whether this is a quiz or test"),
                ),
                (
                    "number",
                    models.PositiveSmallIntegerField(
                        help_text="The number of the assignment (e.g. Test 8, Quiz D) "
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True, help_text="When the assignment opens.", null=True
                    ),
                ),
                (
                    "due_date",
                    models.DateField(
                        blank=True,
                        help_text="When the assignment should be due.",
                        null=True,
                    ),
                ),
                (
                    "answer1",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        validators=[exams.models.expr_validator_multiple],
                    ),
                ),
                (
                    "answer2",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        validators=[exams.models.expr_validator_multiple],
                    ),
                ),
                (
                    "answer3",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        validators=[exams.models.expr_validator_multiple],
                    ),
                ),
                (
                    "answer4",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        validators=[exams.models.expr_validator_multiple],
                    ),
                ),
                (
                    "answer5",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        validators=[exams.models.expr_validator_multiple],
                    ),
                ),
                (
                    "url1",
                    models.URLField(
                        blank=True,
                        max_length=128,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "url2",
                    models.URLField(
                        blank=True,
                        max_length=128,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "url3",
                    models.URLField(
                        blank=True,
                        max_length=128,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "url4",
                    models.URLField(
                        blank=True,
                        max_length=128,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "url5",
                    models.URLField(
                        blank=True,
                        max_length=128,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
            ],
            options={
                "ordering": ("family", "-is_test", "number"),
                "unique_together": {("family", "is_test", "number")},
            },
        ),
        migrations.CreateModel(
            name="ExamAttempt",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "guess1",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        validators=[exams.models.expr_validator],
                        verbose_name="Problem 1 response",
                    ),
                ),
                (
                    "guess2",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        validators=[exams.models.expr_validator],
                        verbose_name="Problem 2 response",
                    ),
                ),
                (
                    "guess3",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        validators=[exams.models.expr_validator],
                        verbose_name="Problem 3 response",
                    ),
                ),
                (
                    "guess4",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        validators=[exams.models.expr_validator],
                        verbose_name="Problem 4 response",
                    ),
                ),
                (
                    "guess5",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        validators=[exams.models.expr_validator],
                        verbose_name="Problem 5 response",
                    ),
                ),
                (
                    "submit_time",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the quiz was submitted"
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        help_text="The quiz being submitted for",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="exams.practiceexam",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        help_text="The student taking the exam",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="roster.student",
                    ),
                ),
                (
                    "score",
                    models.SmallIntegerField(
                        blank=True, help_text="The number of correct answers", null=True
                    ),
                ),
            ],
            options={
                "unique_together": {("quiz", "student")},
            },
        ),
        migrations.CreateModel(
            name="MockCompleted",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="roster.student"
                    ),
                ),
                (
                    "exam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="exams.practiceexam",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, default=django.utils.timezone.now
                    ),
                ),
            ],
            options={
                "unique_together": {("student", "exam")},
                "verbose_name_plural": "Mock completions",
            },
        ),
    ]
